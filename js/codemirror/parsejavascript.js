var JSParser=Editor.Parser=(function(){var atomicTypes={atom:true,number:true,variable:true,string:true,regexp:true};var json=false;function JSLexical(indented,column,type,align,prev,info){this.indented=indented;this.column=column;this.type=type;if(align!=null){this.align=align}this.prev=prev;this.info=info}function indentJS(lexical){return function(firstChars){var firstChar=firstChars&&firstChars.charAt(0),type=lexical.type;var closing=firstChar==type;if(type=="vardef"){return lexical.indented+4}else{if(type=="form"&&firstChar=="{"){return lexical.indented}else{if(type=="stat"||type=="form"){return lexical.indented+indentUnit}else{if(lexical.info=="switch"&&!closing){return lexical.indented+(/^(?:case|default)\b/.test(firstChars)?indentUnit:2*indentUnit)}else{if(lexical.align){return lexical.column-(closing?1:0)}else{return lexical.indented+(closing?0:indentUnit)}}}}}}}function parseJS(input,basecolumn){var tokens=tokenizeJavaScript(input);var cc=[statements];var context=null;var lexical=new JSLexical((basecolumn||0)-indentUnit,0,"block",false);var column=0;var indented=0;var consume,marked;var parser={next:next,copy:copy};function next(){while(cc[cc.length-1].lex){cc.pop()()}var token=tokens.next();if(token.type=="whitespace"&&column==0){indented=token.value.length}column+=token.value.length;if(token.content=="\n"){indented=column=0;if(!("align" in lexical)){lexical.align=false}token.indentation=indentJS(lexical)}if(token.type=="whitespace"||token.type=="comment"){return token}if(!("align" in lexical)){lexical.align=true}while(true){consume=marked=false;cc.pop()(token.type,token.content);if(consume){if(marked){token.style=marked}else{if(token.type=="variable"&&inScope(token.content)){token.style="js-localvariable"}}return token}}}function copy(){var _context=context,_lexical=lexical,_cc=cc.concat([]),_tokenState=tokens.state;return function copyParser(input){context=_context;lexical=_lexical;cc=_cc.concat([]);column=indented=0;tokens=tokenizeJavaScript(input,_tokenState);return parser}}function push(fs){for(var i=fs.length-1;i>=0;i--){cc.push(fs[i])}}function cont(){push(arguments);consume=true}function pass(){push(arguments);consume=false}function mark(style){marked=style}function pushcontext(){context={prev:context,vars:{"this":true,"arguments":true}}}function popcontext(){context=context.prev}function register(varname){if(context){mark("js-variabledef");context.vars[varname]=true}}function inScope(varname){var cursor=context;while(cursor){if(cursor.vars[varname]){return true}cursor=cursor.prev}return false}function pushlex(type,info){var result=function(){lexical=new JSLexical(indented,column,type,null,lexical,info)};result.lex=true;return result}function poplex(){lexical=lexical.prev}poplex.lex=true;function expect(wanted){return function expecting(type){if(type==wanted){cont()}else{cont(arguments.callee)}}}function statements(type){return pass(statement,statements)}function statement(type){if(type=="var"){cont(pushlex("vardef"),vardef1,expect(";"),poplex)}else{if(type=="keyword a"){cont(pushlex("form"),expression,statement,poplex)}else{if(type=="keyword b"){cont(pushlex("form"),statement,poplex)}else{if(type=="{"&&json){cont(pushlex("}"),commasep(objprop,"}"),poplex)}else{if(type=="{"){cont(pushlex("}"),block,poplex)}else{if(type=="function"){cont(functiondef)}else{if(type=="for"){cont(pushlex("form"),expect("("),pushlex(")"),forspec1,expect(")"),poplex,statement,poplex)}else{if(type=="variable"){cont(pushlex("stat"),maybelabel)}else{if(type=="switch"){cont(pushlex("form"),expression,pushlex("}","switch"),expect("{"),block,poplex,poplex)}else{if(type=="case"){cont(expression,expect(":"))}else{if(type=="default"){cont(expect(":"))}else{if(type=="catch"){cont(pushlex("form"),pushcontext,expect("("),funarg,expect(")"),statement,poplex,popcontext)}else{pass(pushlex("stat"),expression,expect(";"),poplex)}}}}}}}}}}}}}function expression(type){if(atomicTypes.hasOwnProperty(type)){cont(maybeoperator)}else{if(type=="function"){cont(functiondef)}else{if(type=="keyword c"){cont(expression)}else{if(type=="("){cont(pushlex(")"),expression,expect(")"),poplex,maybeoperator)}else{if(type=="operator"){cont(expression)}else{if(type=="["){cont(pushlex("]"),commasep(expression,"]"),poplex,maybeoperator)}else{if(type=="{"){cont(pushlex("}"),commasep(objprop,"}"),poplex,maybeoperator)}}}}}}}}function maybeoperator(type){if(type=="operator"){cont(expression)}else{if(type=="("){cont(pushlex(")"),expression,commasep(expression,")"),poplex,maybeoperator)}else{if(type=="."){cont(property,maybeoperator)}else{if(type=="["){cont(pushlex("]"),expression,expect("]"),poplex,maybeoperator)}}}}}function maybelabel(type){if(type==":"){cont(poplex,statement)}else{pass(maybeoperator,expect(";"),poplex)}}function property(type){if(type=="variable"){mark("js-property");cont()}}function objprop(type){if(type=="variable"){mark("js-property")}if(atomicTypes.hasOwnProperty(type)){cont(expect(":"),expression)}}function commasep(what,end){function proceed(type){if(type==","){cont(what,proceed)}else{if(type==end){cont()}else{cont(expect(end))}}}return function commaSeparated(type){if(type==end){cont()}else{pass(what,proceed)}}}function block(type){if(type=="}"){cont()}else{pass(statement,block)}}function vardef1(type,value){if(type=="variable"){register(value);cont(vardef2)}else{cont()}}function vardef2(type,value){if(value=="="){cont(expression,vardef2)}else{if(type==","){cont(vardef1)}}}function forspec1(type){if(type=="var"){cont(vardef1,forspec2)}else{if(type==";"){pass(forspec2)}else{if(type=="variable"){cont(formaybein)}else{pass(forspec2)}}}}function formaybein(type,value){if(value=="in"){cont(expression)}else{cont(maybeoperator,forspec2)}}function forspec2(type,value){if(type==";"){cont(forspec3)}else{if(value=="in"){cont(expression)}else{cont(expression,expect(";"),forspec3)}}}function forspec3(type){if(type==")"){pass()}else{cont(expression)}}function functiondef(type,value){if(type=="variable"){register(value);cont(functiondef)}else{if(type=="("){cont(pushcontext,commasep(funarg,")"),statement,popcontext)}}}function funarg(type,value){if(type=="variable"){register(value);cont()}}return parser}return{make:parseJS,electricChars:"{}:",configure:function(obj){if(obj.json!=null){json=obj.json}}}})();